# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, config, lib, pkgs, modulesPath, ... }:

let
  unstable = import inputs.nixos-unstable {
    system = pkgs.system;
    config.allowUnfree = true;
  };

  nixos-linux-6-14 = import (
    let rev = "d838e584bbbd0c5bcfe4da8cdccb2bca79b81c18";
    in builtins.fetchTarball rec {
      name   = "nixpkgs-${rev}";
      url    = "https://github.com/arximboldi/nixpkgs/archive/${rev}.tar.gz";
      sha256 = "0xmyy0c8lyylm0fcvxc7w9xgf9jpc09wq1f3dhz17r5jkm9vczpl";
    }
  ) { system = pkgs.system; };

in
{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
      "${inputs.nixos-hardware}/framework/13-inch/amd-ai-300-series/"
    ];

  hardware.framework.laptop13.audioEnhancement.enable = true;
  hardware.framework.laptop13.audioEnhancement.hideRawDevice = false;

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/73d0694e-c4b4-4611-80a9-8d8d38d59b1f";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-96baacf0-b474-4836-852c-8defe41909ad".device =
        "/dev/disk/by-uuid/96baacf0-b474-4836-852c-8defe41909ad";

  boot.initrd.luks.devices."luks-f93c075a-47bc-46e7-af18-400201a7680f".device =
        "/dev/disk/by-uuid/f93c075a-47bc-46e7-af18-400201a7680f";

	fileSystems."/boot" =
	{ device = "/dev/disk/by-uuid/98D4-90BE";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/1cdec3e4-5364-4796-b6d5-9ed4ccdc7d55"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp192s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # for this
  # https://bbs.archlinux.org/viewtopic.php?id=305793
  boot.kernelPackages = nixos-linux-6-14.linuxPackages_6_14;

  # trying this
  # boot.kernelParams = ["amdgpu.mes=0" "amdgpu.gpu_recovery=1"];
  services.fwupd.enable = true;
}
